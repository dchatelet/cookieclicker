{ mods: {… }, sortedMods: Array(0), brokenMods: Array(0), modSaveData: {… }, modHooks: {… }, … }
Achievement: ƒ(name, desc, icon)
arguments: null
caller: null
length: 3
name: ""
prototype: { getType: ƒ, toggle: ƒ, constructor: ƒ }
[[FunctionLocation]]: main.js ? v = 4 : 10868
[[Prototype]]: ƒ()
[[Scopes]]: Scopes[2]
Achievements: {Wake and bake: G…e.Achievement, Making some dough: G…e.Achievement, So baked right now: G…e.Achievement, Fledgling bakery: G…e.Achievement, Affluent bakery: G…e.Achievement, … }
AchievementsById: { 0: G…e.Achievement, 1: G…e.Achievement, 2: G…e.Achievement, 3: G…e.Achievement, 4: G…e.Achievement, 5: G…e.Achievement, 6: G…e.Achievement, 7: G…e.Achievement, 8: G…e.Achievement, 9: G…e.Achievement, 10: G…e.Achievement, 11: G…e.Achievement, 12: G…e.Achievement, 13: G…e.Achievement, 14: G…e.Achievement, 15: G…e.Achievement, 16: G…e.Achievement, 17: G…e.Achievement, 18: G…e.Achievement, 19: G…e.Achievement, 20: G…e.Achievement, 21: G…e.Achievement, 22: G…e.Achievement, 23: G…e.Achievement, 24: G…e.Achievement, 25: G…e.Achievement, 26: G…e.Achievement, 27: G…e.Achievement, 28: G…e.Achievement, 29: G…e.Achievement, 30: G…e.Achievement, 31: G…e.Achievement, 32: G…e.Achievement, 33: G…e.Achievement, 34: G…e.Achievement, 35: G…e.Achievement, 36: G…e.Achievement, 37: G…e.Achievement, 38: G…e.Achievement, 39: G…e.Achievement, 40: G…e.Achievement, 41: G…e.Achievement, 42: G…e.Achievement, 43: G…e.Achievement, 44: G…e.Achievement, 45: G…e.Achievement, 46: G…e.Achievement, 47: G…e.Achievement, 48: G…e.Achievement, 49: G…e.Achievement, 50: G…e.Achievement, 51: G…e.Achievement, 52: G…e.Achievement, 53: G…e.Achievement, 54: G…e.Achievement, 55: G…e.Achievement, 56: G…e.Achievement, 57: G…e.Achievement, 58: G…e.Achievement, 59: G…e.Achievement, 60: G…e.Achievement, 61: G…e.Achievement, 62: G…e.Achievement, 63: G…e.Achievement, 64: G…e.Achievement, 65: G…e.Achievement, 66: G…e.Achievement, 67: G…e.Achievement, 68: G…e.Achievement, 69: G…e.Achievement, 70: G…e.Achievement, 71: G…e.Achievement, 72: G…e.Achievement, 73: G…e.Achievement, 74: G…e.Achievement, 75: G…e.Achievement, 76: G…e.Achievement, 77: G…e.Achievement, 78: G…e.Achievement, 79: G…e.Achievement, 80: G…e.Achievement, 81: G…e.Achievement, 82: G…e.Achievement, 83: G…e.Achievement, 84: G…e.Achievement, 85: G…e.Achievement, 86: G…e.Achievement, 87: G…e.Achievement, 88: G…e.Achievement, 89: G…e.Achievement, 90: G…e.Achievement, 91: G…e.Achievement, 92: G…e.Achievement, 93: G…e.Achievement, 94: G…e.Achievement, 95: G…e.Achievement, 96: G…e.Achievement, 97: G…e.Achievement, 98: G…e.Achievement, 99: G…e.Achievement, … }
AchievementsN: 589
AchievementsOwned: 100
AddToLog: ƒ(what)
arguments: null
caller: null
length: 1
name: ""
prototype: { constructor: ƒ }
[[FunctionLocation]]: main.js ? v = 4 : 6971
[[Prototype]]: ƒ()
[[Scopes]]: Scopes[2]
AllBGs: (25)[{… }, {… }, {… }, {… }, {… }, {… }, {… }, {… }, {… }, {… }, {… }, {… }, {… }, {… }, {… }, {… }, {… }, {… }, {… }, {… }, {… }, {… }, {… }, {… }, {… }]
AllMilks: Array(33)
0: { name: 'Automatique', icon: Array(2), type: -1, pic: 'milkPlain.png', bname: 'Automatic' }
1: { name: 'Lait nature', icon: Array(2), type: 0, pic: 'milkPlain.png', bname: 'Plain milk', … }
2: { name: 'Lait chocolaté', icon: Array(2), type: 0, pic: 'milkChocolate.png', bname: 'Chocolate milk', … }
3: { name: 'Lait framboise', icon: Array(2), type: 0, pic: 'milkRaspberry.png', bname: 'Raspberry milk', … }
4: { name: 'Lait orange', icon: Array(2), type: 0, pic: 'milkOrange.png', bname: 'Orange milk', … }
5: { name: 'Lait caramel', icon: Array(2), type: 0, pic: 'milkCaramel.png', bname: 'Caramel milk', … }
6: { name: 'Lait banane', icon: Array(2), type: 0, pic: 'milkBanana.png', bname: 'Banana milk', … }
7: { name: 'Lait citron vert', icon: Array(2), type: 0, pic: 'milkLime.png', bname: 'Lime milk', … }
8: { name: 'Lait myrtille', icon: Array(2), type: 0, pic: 'milkBlueberry.png', bname: 'Blueberry milk', … }
9: { name: 'Lait fraise', icon: Array(2), type: 0, pic: 'milkStrawberry.png', bname: 'Strawberry milk', … }
10: { name: 'Lait vanille', icon: Array(2), type: 0, pic: 'milkVanilla.png', bname: 'Vanilla milk', … }
11: { name: 'Lait zébré', icon: Array(2), type: 1, pic: 'milkZebra.png', bname: 'Zebra milk' }
12: { name: 'Lait cosmique', icon: Array(2), type: 1, pic: 'milkStars.png', bname: 'Cosmic milk' }
13: { name: 'Lait enflammé', icon: Array(2), type: 1, pic: 'milkFire.png', bname: 'Flaming milk' }
14: { name: 'Lait sanguin', icon: Array(2), type: 1, pic: 'milkBlood.png', bname: 'Sanguine milk' }
15: { name: 'Lait Midas', icon: Array(2), type: 1, pic: 'milkGold.png', bname: 'Midas milk' }
16: { name: 'Lait de minuit', icon: Array(2), type: 1, pic: 'milkBlack.png', bname: 'Midnight milk' }
17: { name: 'Lait enfer vert', icon: Array(2), type: 1, pic: 'milkGreenFire.png', bname: 'Green inferno milk' }
18: { name: 'Lait feu de glace', icon: Array(2), type: 1, pic: 'milkBlueFire.png', bname: 'Frostfire milk' }
19: { name: 'Lait miel', icon: Array(2), type: 0, pic: 'milkHoney.png', bname: 'Honey milk', … }
20: { name: 'Lait café', icon: Array(2), type: 0, pic: 'milkCoffee.png', bname: 'Coffee milk', … }
21: { name: 'Lait thé', icon: Array(2), type: 0, pic: 'milkTea.png', bname: 'Tea milk', … }
22: { name: 'Lait coco', icon: Array(2), type: 0, pic: 'milkCoconut.png', bname: 'Coconut milk', … }
23: { name: 'Lait cerise', icon: Array(2), type: 0, pic: 'milkCherry.png', bname: 'Cherry milk', … }
24: { name: 'Lait soja', icon: Array(2), type: 1, pic: 'milkSoy.png', bname: 'Soy milk' }
25: { name: 'Lait épicé', icon: Array(2), type: 0, pic: 'milkSpiced.png', bname: 'Spiced milk', … }
26: { name: 'Lait érable', icon: Array(2), type: 0, pic: 'milkMaple.png', bname: 'Maple milk', … }
27: { name: 'Lait menthe', icon: Array(2), type: 0, pic: 'milkMint.png', bname: 'Mint milk', … }
28: { name: 'Lait réglisse', icon: Array(2), type: 0, pic: 'milkLicorice.png', bname: 'Licorice milk', … }
29: { name: 'Lait rose', icon: Array(2), type: 0, pic: 'milkRose.png', bname: 'Rose milk', … }
30: { name: 'Lait fruit du dragon', icon: Array(2), type: 0, pic: 'milkDragonfruit.png', bname: 'Dragonfruit milk', … }
31: { name: 'Melon milk', icon: Array(2), type: 0, pic: 'milkMelon.png', bname: 'Melon milk', … }
32: { name: 'Blackcurrant milk', icon: Array(2), type: 0, pic: 'milkBlackcurrant.png', bname: 'Blackcurrant milk', … }
length: 33
[[Prototype]]: Array(0)
at: ƒ at()
concat: ƒ concat()
constructor: ƒ Array()
copyWithin: ƒ copyWithin()
entries: ƒ entries()
every: ƒ every()
fill: ƒ fill()
filter: ƒ filter()
find: ƒ find()
findIndex: ƒ findIndex()
findLast: ƒ findLast()
findLastIndex: ƒ findLastIndex()
flat: ƒ flat()
flatMap: ƒ flatMap()
forEach: ƒ forEach()
includes: ƒ includes()
indexOf: ƒ indexOf()
join: ƒ join()
keys: ƒ keys()
lastIndexOf: ƒ lastIndexOf()
length: 0
map: ƒ map()
pop: ƒ pop()
push: ƒ push()
reduce: ƒ reduce()
reduceRight: ƒ reduceRight()
reverse: ƒ reverse()
shift: ƒ shift()
slice: ƒ slice()
some: ƒ some()
sort: ƒ sort()
splice: ƒ splice()
toLocaleString: ƒ toLocaleString()
toString: ƒ toString()
unshift: ƒ unshift()
values: ƒ values()
Symbol(Symbol.iterator): ƒ values()
Symbol(Symbol.unscopables): { at: true, copyWithin: true, entries: true, fill: true, find: true, … }
[[Prototype]]: Object
Ascend: ƒ(bypass)
arguments: null
caller: null
length: 1
name: ""
prototype: { constructor: ƒ }
[[FunctionLocation]]: main.js ? v = 4 : 3742
[[Prototype]]: ƒ()
[[Scopes]]: Scopes[2]
AscendBreakpoint: 2.5
AscendDragX: 0
AscendDragY: 0
AscendDragging: 0
AscendDuration: 5
AscendGridSnap: 24
AscendOffX: 0
AscendOffXT: 0
AscendOffY: 0
AscendOffYT: 0
AscendRefocus: ƒ()
AscendTimer: 0
AscendZoom: 1
AscendZoomT: 1
AssignPermanentSlot: ƒ(slot)
arguments: null
caller: null
length: 1
name: ""
prototype: { constructor: ƒ }
[[FunctionLocation]]: main.js ? v = 4 : 9334
[[Prototype]]: ƒ()
[[Scopes]]: Scopes[2]
BGsByChoice:
0: { pic: 'bgBlue', name: 'Automatique', icon: Array(2) }
1: { pic: 'bgBlue', name: 'Blue', icon: Array(2) }
2: { pic: 'bgRed', name: 'Red', icon: Array(2) }
3: { pic: 'bgWhite', name: 'White', icon: Array(2) }
4: { pic: 'bgBlack', name: 'Black', icon: Array(2) }
5: { pic: 'bgGold', name: 'Gold', icon: Array(2) }
6: { pic: 'grandmas1', name: 'Grandmas', icon: Array(2) }
7: { pic: 'grandmas2', name: 'Displeased grandmas', icon: Array(2) }
8: { pic: 'grandmas3', name: 'Angered grandmas', icon: Array(2) }
9: { pic: 'bgMoney', name: 'Money', icon: Array(2) }
10: { pic: 'bgPurple', name: 'Purple', icon: Array(2), order: 1.1 }
11: { pic: 'bgPink', name: 'Pink', icon: Array(2), order: 2.1 }
12: { pic: 'bgMint', name: 'Mint', icon: Array(2), order: 2.2 }
13: { pic: 'bgSilver', name: 'Silver', icon: Array(2), order: 4.9 }
14: { pic: 'bgBW', name: 'Black & White', icon: Array(2), order: 4.1 }
15: { pic: 'bgSpectrum', name: 'Spectrum', icon: Array(2), order: 4.2 }
16: { pic: 'bgCandy', name: 'Candy', icon: Array(2) }
17: { pic: 'bgYellowBlue', name: 'Biscuit store', icon: Array(2) }
18: { pic: 'bgChoco', name: 'Chocolate', icon: Array(2) }
19: { pic: 'bgChocoDark', name: 'Dark Chocolate', icon: Array(2) }
20: { pic: 'bgPaint', name: 'Painter', icon: Array(2) }
21: { pic: 'bgSnowy', name: 'Snow', icon: Array(2) }
22: { pic: 'bgSky', name: 'Sky', icon: Array(2) }
23: { pic: 'bgStars', name: 'Night', icon: Array(2) }
24: { pic: 'bgFoil', name: 'Foil', icon: Array(2) }
[[Prototype]]: Object
Background: CanvasRenderingContext2D { canvas: canvas#backgroundCanvas, globalAlpha: 1, globalCompositeOperation: 'source-over', filter: 'none', imageSmoothingEnabled: true, … }
BankAchievement: ƒ(name, q)
BankAchievements: (46)[G…e.Achievement, G…e.Achievement, G…e.Achievement, G…e.Achievement, G…e.Achievement, G…e.Achievement, G…e.Achievement, G…e.Achievement, G…e.Achievement, G…e.Achievement, G…e.Achievement, G…e.Achievement, G…e.Achievement, G…e.Achievement, G…e.Achievement, G…e.Achievement, G…e.Achievement, G…e.Achievement, G…e.Achievement, G…e.Achievement, G…e.Achievement, G…e.Achievement, G…e.Achievement, G…e.Achievement, G…e.Achievement, G…e.Achievement, G…e.Achievement, G…e.Achievement, G…e.Achievement, G…e.Achievement, G…e.Achievement, G…e.Achievement, G…e.Achievement, G…e.Achievement, G…e.Achievement, G…e.Achievement, G…e.Achievement, G…e.Achievement, G…e.Achievement, G…e.Achievement, G…e.Achievement, G…e.Achievement, G…e.Achievement, G…e.Achievement, G…e.Achievement, G…e.Achievement]
BigCookieSize: 1
BigCookieSizeD: 6.158504972011128e-57
BigCookieSizeT: 1
BigCookieState: 0
BuildAscendTree: ƒ(justBought)
BuildStore: ƒ()//create the DOM for the store's buildings { //if (typeof showAds!=='undefined') l('store').scrollTop=100; var str = ''; str += '<div id="storeBulk" class="storePre" ' + Game.getTooltip( '<div style="padding:8px;min-width:200px;text-align:center;font-size:11px;" id="tooltipStoreBulk">' + loc("You can also press %1 to bulk-buy or sell %2 of a building at a time, or %3 for %4.", ['<b>' + loc("Ctrl") + '</b>', '<b>10</b>', '<b>' + loc("Shift") + '</b>', '<b>100</b>']) + '</div>' , 'store') + '>' + '<div id="storeBulkBuy" class="storePreButton storeBulkMode" ' + Game.clickStr + '="Game.storeBulkButton(0);">' + loc("Buy") + '</div>' + '<div id="storeBulkSell" class="storePreButton storeBulkMode" ' + Game.clickStr + '="Game.storeBulkButton(1);">' + loc("Sell") + '</div>' + '<div id="storeBulk1" class="storePreButton storeBulkAmount" ' + Game.clickStr + '="Game.storeBulkButton(2);">1</div>' + '<div id="storeBulk10" class="storePreButton storeBulkAmount" ' + Game.clickStr + '="Game.storeBulkButton(3);">10</div>' + '<div id="storeBulk100" class="storePreButton storeBulkAmount" ' + Game.clickStr + '="Game.storeBulkButton(4);">100</div>' + '<div id="storeBulkMax" class="storePreButton storeBulkAmount" ' + Game.clickStr + '="Game.storeBulkButton(5);">' + loc("all") + '</div>' + '</div>'; for (var i in Game.Objects)
BuildingsOwned: 1785
CalculateGains: ƒ()
CanClick: 1
CheckModData: ƒ()
CheckUpdates: ƒ()
CheckUpdatesResponse: ƒ(response)
Click: 0
ClickCookie: ƒ(e, amount)
ClickProduct: ƒ(what)
ClickSpecialPic: ƒ()
ClickTinyCookie: ƒ()
CloseNote: ƒ(id)
CloseNotes: ƒ()
ClosePrompt: ƒ()
CollectWrinklers: ƒ()
ComputeCps: ƒ(base, mult, bonus)
ConfirmPrompt: ƒ()
CountsAsAchievementOwned: ƒ(pool)
CountsAsUpgradeOwned: ƒ(pool)
CpsAchievement: ƒ(name, q)
CpsAchievements: (46)[G…e.Achievement, G…e.Achievement, G…e.Achievement, G…e.Achievement, G…e.Achievement, G…e.Achievement, G…e.Achievement, G…e.Achievement, G…e.Achievement, G…e.Achievement, G…e.Achievement, G…e.Achievement, G…e.Achievement, G…e.Achievement, G…e.Achievement, G…e.Achievement, G…e.Achievement, G…e.Achievement, G…e.Achievement, G…e.Achievement, G…e.Achievement, G…e.Achievement, G…e.Achievement, G…e.Achievement, G…e.Achievement, G…e.Achievement, G…e.Achievement, G…e.Achievement, G…e.Achievement, G…e.Achievement, G…e.Achievement, G…e.Achievement, G…e.Achievement, G…e.Achievement, G…e.Achievement, G…e.Achievement, G…e.Achievement, G…e.Achievement, G…e.Achievement, G…e.Achievement, G…e.Achievement, G…e.Achievement, G…e.Achievement, G…e.Achievement, G…e.Achievement, G…e.Achievement]
DebugUpgradeCpS: ƒ()
DebuggingPrestige: 0
DefaultPrefs: ƒ()
DescribeDragonAura: ƒ(aura)
Dissolve: ƒ(howmuch)
Draw: ƒ()
DrawBackground: ƒ()
DrawBuildings: ƒ()//draw building displays with canvas { if (Game.drawT % 3 == 0)
DrawSpecial: ƒ()
DrawWrinklers: ƒ()
DropEgg: ƒ(failRate)
Earn: ƒ(howmuch)
EarnHeavenlyChips: ƒ(cookiesForfeited, silent)
EditAscend: ƒ()
ErrorFrame: ƒ()
ExportSave: ƒ()
FileLoad: ƒ(e)
FileSave: ƒ()
FocusPromptOption: ƒ(dir, tryN)
GetAllDebugs: ƒ()
GetBakeryName: ƒ()
GetHeavenlyMultiplier: ƒ()
GetHowManyEggs: ƒ()
GetHowManyHalloweenDrops: ƒ()
GetHowManyHeartDrops: ƒ()
GetHowManyReindeerDrops: ƒ()
GetHowManySantaDrops: ƒ()
arguments: null
caller: null
length: 0
name: ""
prototype: { constructor: ƒ }
[[FunctionLocation]]: main.js ? v = 4 : 10722
[[Prototype]]: ƒ()
[[Scopes]]: Scopes[2]
0: Closure(Game.Init)
getStrCookieProductionMultiplierPlus: ƒ(x)
getStrThousandFingersGain: ƒ(x)
inRect: ƒ inRect(x, y, rect)
order: 6001
pool: ""
power: 0
strCookieProductionMultiplierPlus: "Multiplicateur de production de cookies <b>+[x] %</b>."
[[Prototype]]: Object
1: Global { window: Window, self: Window, document: document, name: 'dominique chatelet', location: Location, … }
GetIcon: ƒ(type, tier)
arguments: null
caller: null
length: 2
name: ""
prototype: { constructor: ƒ }
[[FunctionLocation]]: main.js ? v = 4 : 8654
[[Prototype]]: ƒ()
[[Scopes]]: Scopes[2]
GetMouseCoords: ƒ(e)
GetTieredCpsMult: ƒ(me)
GrabData: ƒ()
GrabDataResponse: ƒ(response)
GrandmaSynergies: (17)['Farmer grandmas', 'Miner grandmas', 'Worker grandmas', 'Cosmic grandmas', 'Transmuted grandmas', 'Altered grandmas', "Grandmas' grandmas", 'Antigrandmas', 'Rainbow grandmas', 'Banker grandmas', 'Priestess grandmas', 'Witch grandmas', 'Lucky grandmas', 'Metagrandmas', 'Binary grandmas', 'Alternate grandmas', 'Brainy grandmas']
GrandmaSynergy: ƒ(name, desc, building)
HCfactor: 3
HardReset: ƒ(bypass)
Has: ƒ(what)
HasAchiev: ƒ(what)
HasUnlocked: ƒ(what)
HowManyCookiesReset: ƒ()
HowMuchPrestige: ƒ()
ImportSave: ƒ(def)
ImportSaveCode: ƒ(save)
Init: ƒ()
Launch: ƒ()
LeftBackground: CanvasRenderingContext2D { canvas: canvas#backgroundLeftCanvas, globalAlpha: 1, globalCompositeOperation: 'source-over', filter: 'none', imageSmoothingEnabled: true, … }
Load: ƒ()
LoadMinigames: ƒ()//load scripts for each minigame { for (var i in Game.Objects)
LoadMod: ƒ(url, callback, error)
LoadSave: ƒ(data, ignoreVersionIssues)
LoadWrinklers: ƒ(amount, number, shinies, amountShinies)
Loader: Loader { loadingN: 0, assetsN: 10, assets: Array(0), assetsLoading: Array(0), assetsLoaded: Array(10), … }
Lock: ƒ(what)
Log: (100)['Actualités : « il faut bien dire que toutes ces hi…kies sont inquiétantes » déclare un idiot confus.', "Actualités : une célébrité ose révéler : « bon, je…ue... je n'ai jamais mangé un cookie de ma vie ».", "Actualités : le tourisme vers le cookievers plaît …cents qui s'ennuient ! Jusqu'à 73 % de victimes !", 'Actualités : un scientifique affirme que les ferme…es polluent nos rivières avec du chocolat nocif !', 'Actualités : des formes de vie à base de chocolat découvertes sur une autre planète !', "Actualités : les théistes du mode entier découvren…suppose qu'on avait tort depuis tout ce temps ! »", 'Actualités : une étude révèle que les cookies ne r…« vous emmènent dans une toute autre direction ».', '<q>Notre ascension est en cours.</q><sig>grand-mère</sig>', "Actualités : persistance des anomalies statistique…s'avèrent exactes pendant trois jours d'affilée !", "Actualités : des chercheurs concluent que l'indust…s a besoin de « davantage d'aimants » avant tout.", "Actualités : découverte d'une nouvelle planète en …sseaux spécialisés dans le commerce des cookies !", "Actualités : la famille de l'homme allergique aux cookies déclare : « il est vraiment louche ».", 'Actualités : des formes de vie à base de chocolat découvertes sur une autre planète !', 'Actualités : La plupart des pâtisseries disposent … faciliter les dépôts et les retraits de cookies.', 'Actualités : les médecins recommendent de consommer des cookies frais deux fois par jour.', 'Actualités : les fermes à cookies frappées par la …ntroverse sur le chocolat génétiquement modifié !', "Actualités : on exhorte les citoyens du monde à « …» des nombreux éclats lumineux dans l'atmosphère.", "Actualités : une célébrité ose révéler : « bon, je…ue... je n'ai jamais mangé un cookie de ma vie ».", "Actualités : « désormais, les cookies constituent …er quoi que ce soit d'autre, on est tous morts ».", 'Actualités : obtenez de nouveaux charmes et malédi…tions exceptionnelles sur les runes et grimoires.', "Actualités : une ville frappée par la pénurie de c…s. Le maire avoue « ce n'est pas la même chose ».", 'Actualités : les développeurs ne savent plus comme… de trois mots du dictionnaire étant déjà prises.', 'Actualités : une étude révèle que les cookies ne r…« vous emmènent dans une toute autre direction ».', 'Actualités : les médecins recommendent de consommer des cookies frais deux fois par jour.', 'Actualités : grève des usines de cookies, les travailleurs remplacés par des robots !', 'Actualités : des explorateurs ramènent un artefact…rouleau à pâtisserie vieux de plusieurs siècles !', "Actualités : une ville apparemment engloutie par u…ent que la ville « n'a jamais vraiment existé » !", "Actualités : les temples du chocolat récemment déc… milliers d'adeptes prient le pâtissier céleste !", "Actualités : le tourisme vers le cookievers plaît …cents qui s'ennuient ! Jusqu'à 73 % de victimes !", 'Actualités : un nutritionniste déclare les fermes à cookies non véganes.', '<q>Esclavage dentesque.</q><sig>grand-mère</sig>', "Actualités : des sondages montrent que les cookies… « au moins, on sait enfin ce qu'il y a dedans ».", 'Actualités : un scientifique affirme que les ferme…es polluent nos rivières avec du chocolat nocif !', 'Actualités : un homme braque une banque et achète des cookies.', '<q>Tu me dégoûtes.</q><sig>grand-mère</sig>', 'Actualités : une étrange mode mise à jour poussera….js ou Liam.js. Au moins un Bébé.js déjà signalé.', 'Actualités : « Ook » affirme un orang-outang interrogé.', "Actualités : le code est à la mode ! De plus en pl…alypse robotique provoquant la fin de l'humanité.", 'Actualités : une célébrité révèle : « je ne suis p…urs issues de fans qui ont trop de temps libre ».', "Actualités : les temples du chocolat récemment déc… milliers d'adeptes prient le pâtissier céleste !", 'Actualités : grève des usines de cookies, les employés exigent de ne plus être payés en cookies !', "Actualités : une célébrité ose révéler : « bon, je…ue... je n'ai jamais mangé un cookie de ma vie ».", 'Actualités : un homme braque une banque et achète des cookies.', "Actualités : des sondages montrent que les cookies… « au moins, on sait enfin ce qu'il y a dedans ».", 'Actualités : grève des usines de cookies, les travailleurs remplacés par des robots !', 'Actualités : les cookies déclarés illégaux dans un…s politique attisées, une guerre espérée bientôt.', 'Actualités : les cookies désormais cuits à la vite…mière grâce à de nouveaux appareils prismatiques.', '<q>Notre ascension est en cours.</q><sig>grand-mère</sig>', 'Actualités : des formes de vie à base de chocolat découvertes sur une autre planète !', 'Actualités : une étrange mode mise à jour poussera….js ou Liam.js. Au moins un Bébé.js déjà signalé.', "Actualités : les profondeurs des mines de chocolat abritent d'« étranges êtres chocolatés » !", "Actualités : une ville frappée par la pénurie de c…s. Le maire avoue « ce n'est pas la même chose ».", "<q>Tu aurais pu l'arrêter.</q><sig>grand-mère</sig>", 'Actualités : les médecins recommendent de consommer des cookies frais deux fois par jour.', '<q>Appelle-moi...</q><sig>grand-mère</sig>', 'Actualités : des scientifiques avertissent du dang…finir avec que de la matière et sans lumière ! ».', '<q>Tout sera bientôt terminé.</q><sig>grand-mère</sig>', 'Actualités : les usines de cookies liées au réchauffement climatique !', 'Actualités : les cookies se présentent lentement c…me des concurrents des monnaies traditionnelles !', 'Actualités : un scientifique affirme que les ferme…es polluent nos rivières avec du chocolat nocif !', '<q>Esclavage dentesque.</q><sig>grand-mère</sig>', "Actualités : des sondages montrent que les cookies… « au moins, on sait enfin ce qu'il y a dedans ».", "Actualités : on exhorte les citoyens du monde à « …» des nombreux éclats lumineux dans l'atmosphère.", 'Actualités : un homme braque une banque et achète des cookies.', 'Actualités : une célébrité révèle : « je ne suis p…urs issues de fans qui ont trop de temps libre ».', 'Actualités : des scientifiques avertissent du dang…finir avec que de la matière et sans lumière ! ».', 'Actualités : La plupart des pâtisseries disposent … faciliter les dépôts et les retraits de cookies.', '<q>Cette petite saleté a osé nous trahir.</q><sig>grand-mère</sig>', 'Actualités : grève des usines de cookies, les travailleurs remplacés par des robots !', "Actualités : une ville frappée par la pénurie de c…s. Le maire avoue « ce n'est pas la même chose ».", "Actualités : des chercheurs concluent que l'indust…s a besoin de « davantage d'aimants » avant tout.", 'Actualités : les médecins avertissent des dangers du régime sans cookies à la mode.', 'Actualités : une célébrité révèle : « je ne suis p…urs issues de fans qui ont trop de temps libre ».', 'Actualités : saisie de cookies illégaux, la police déclare : « leur goût est affreux ».', "Actualités : « désormais, les cookies constituent …er quoi que ce soit d'autre, on est tous morts ».", 'Actualités : grève des usines de cookies, les employés exigent de ne plus être payés en cookies !', 'Actualités : les cookies désormais cuits à la vite…mière grâce à de nouveaux appareils prismatiques.', 'Actualités : des machines à voyager dans le temps …liquées dans un scandale révisionniste ! Ou pas ?', 'Actualités : un nutritionniste déclare les fermes à cookies non véganes.', "Actualités : les réserves d'or nationales s'effond…tant de plus en plus échangé contre des cookies !", 'Actualités : les cookies désormais cuits à la vite…mière grâce à de nouveaux appareils prismatiques.', "Actualités : une célébrité ose révéler : « bon, je…ue... je n'ai jamais mangé un cookie de ma vie ».", 'Actualités : grève des usines de cookies, les employés exigent de ne plus être payés en cookies !', 'Actualités : une célébrité révèle : « je ne suis p…urs issues de fans qui ont trop de temps libre ».', '<q>Tu me rends malade.</q><sig>grand-mère</sig>', "Actualités : une ville frappée par la pénurie de c…s. Le maire avoue « ce n'est pas la même chose ».", "Actualités : les réserves d'or nationales s'effond…tant de plus en plus échangé contre des cookies !", 'Actualités : des formes de vie à base de chocolat découvertes sur une autre planète !', "Actualités : un laboratoire d'alchimie déficient f…il servait à convertir des cookies en or inutile.", "Actualités : une ville apparemment engloutie par u…ent que la ville « n'a jamais vraiment existé » !", "Actualités : des sondages montrent que les cookies… « au moins, on sait enfin ce qu'il y a dedans ».", 'Actualités : saisie de cookies illégaux, la police déclare : « leur goût est affreux ».', "Actualités : les théistes du mode entier découvren…suppose qu'on avait tort depuis tout ce temps ! »", "Actualités : persistance des anomalies statistique…s'avèrent exactes pendant trois jours d'affilée !", "Actualités : la famille de l'homme allergique aux cookies déclare : « il est vraiment louche ».", 'Actualités : une célébrité révèle : « je ne suis p…urs issues de fans qui ont trop de temps libre ».', 'Actualités : obtenez de nouveaux charmes et malédi…tions exceptionnelles sur les runes et grimoires.', 'Actualités : « Ook » affirme un orang-outang interrogé.', 'Actualités : obtenez de nouveaux charmes et malédi…tions exceptionnelles sur les runes et grimoires.', '<b>Heureux de te revoir !</b> | Tu as gagné <b>41.473 trillion cookies</b> pendant ton absence.']
Logic: ƒ()
Loop: ƒ()
MakeTiered: ƒ(upgrade, tier, col)
MaxSpecials: ƒ()
Milk: { name: 'Lait caramel', icon: Array(2), type: 0, pic: 'milkCaramel.png', bname: 'Caramel milk', … }
Milks: (23)[{… }, {… }, {… }, {… }, {… }, {… }, {… }, {… }, {… }, {… }, {… }, {… }, {… }, {… }, {… }, {… }, {… }, {… }, {… }, {… }, {… }, {… }, {… }]
Mobile: ƒ()
NewUnshackleBuilding: ƒ(obj)
NewUnshackleUpgradeTier: ƒ(obj)
NewUpgradeCookie: ƒ(obj)
Note: ƒ(title, desc, pic, quick)
Notes: []
NotesById: (18)[null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]
NotesDraw: ƒ()
NotesLogic: ƒ()
Notify: ƒ(title, desc, pic, quick, noLog)
NotifyTooltip: ƒ(content)
Object: ƒ(name, commonName, desc, icon, iconColumn, art, price, cps, buyFunction)
Objects: { Cursor: G…e.Object, Grandma: G…e.Object, Farm: G…e.Object, Mine: G…e.Object, Factory: G…e.Object, … }
ObjectsById: (19)[G…e.Object, G…e.Object, G…e.Object, G…e.Object, G…e.Object, G…e.Object, G…e.Object, G…e.Object, G…e.Object, G…e.Object, G…e.Object, G…e.Object, G…e.Object, G…e.Object, G…e.Object, G…e.Object, G…e.Object, G…e.Object, G…e.Object]
ObjectsN: 19
OnAscend: 0
OpenSesame: ƒ()
PermanentSlotIcon: ƒ(slot)
PickAscensionMode: ƒ()
PopRandomWrinkler: ƒ()
Popup: ƒ(text, x, y)
PrestigeUpgrades: (126)[G…e.Upgrade, G…e.Upgrade, G…e.Upgrade, G…e.Upgrade, G…e.Upgrade, G…e.Upgrade, G…e.Upgrade, G…e.Upgrade, G…e.Upgrade, G…e.Upgrade, G…e.Upgrade, G…e.Upgrade, G…e.Upgrade, G…e.Upgrade, G…e.Upgrade, G…e.Upgrade, G…e.Upgrade, G…e.Upgrade, G…e.Upgrade, G…e.Upgrade, G…e.Upgrade, G…e.Upgrade, G…e.Upgrade, G…e.Upgrade, G…e.Upgrade, G…e.Upgrade, G…e.Upgrade, G…e.Upgrade, G…e.Upgrade, G…e.Upgrade, G…e.Upgrade, G…e.Upgrade, G…e.Upgrade, G…e.Upgrade, G…e.Upgrade, G…e.Upgrade, G…e.Upgrade, G…e.Upgrade, G…e.Upgrade, G…e.Upgrade, G…e.Upgrade, G…e.Upgrade, G…e.Upgrade, G…e.Upgrade, G…e.Upgrade, G…e.Upgrade, G…e.Upgrade, G…e.Upgrade, G…e.Upgrade, G…e.Upgrade, G…e.Upgrade, G…e.Upgrade, G…e.Upgrade, G…e.Upgrade, G…e.Upgrade, G…e.Upgrade, G…e.Upgrade, G…e.Upgrade, G…e.Upgrade, G…e.Upgrade, G…e.Upgrade, G…e.Upgrade, G…e.Upgrade, G…e.Upgrade, G…e.Upgrade, G…e.Upgrade, G…e.Upgrade, G…e.Upgrade, G…e.Upgrade, G…e.Upgrade, G…e.Upgrade, G…e.Upgrade, G…e.Upgrade, G…e.Upgrade, G…e.Upgrade, G…e.Upgrade, G…e.Upgrade, G…e.Upgrade, G…e.Upgrade, G…e.Upgrade, G…e.Upgrade, G…e.Upgrade, G…e.Upgrade, G…e.Upgrade, G…e.Upgrade, G…e.Upgrade, G…e.Upgrade, G…e.Upgrade, G…e.Upgrade, G…e.Upgrade, G…e.Upgrade, G…e.Upgrade, G…e.Upgrade, G…e.Upgrade, G…e.Upgrade, G…e.Upgrade, G…e.Upgrade, G…e.Upgrade, G…e.Upgrade, G…e.Upgrade, …]
ProductionAchievement: ƒ(name, building, tier, q, mult)
Prompt: ƒ(content, options, updateFunc, style)
PurchaseHeavenlyUpgrade: ƒ(what)
PutUpgradeInPermanentSlot: ƒ(upgrade, slot)
RandomBakeryName: ƒ()
RebuildUpgrades: ƒ()//recalculate the upgrades you can buy { Game.upgradesToRebuild = 0; var list = []; for (var i in Game.Upgrades)
RefreshStore: ƒ()//refresh the store's buildings { for (var i in Game.Objects)
Reincarnate: ƒ(bypass)
ReincarnateDuration: 1
ReincarnateTimer: 0
RemoveAchiev: ƒ(what)
RequiresConfirmation: ƒ(upgrade, prompt)
Reset: ƒ(hard)
ResetWrinklers: ƒ()
Resume: ƒ()
RuinTheFun: ƒ(silent)
SaveTo: "CookieClickerGame"
SaveWrinklers: ƒ()
Scroll: 0
SelectDragonAura: ƒ(slot, update)
SelectedHeavenlyUpgrade: 0
SelectingDragonAura: -1
SelectingPermanentUpgrade: -1
SesameReset: ƒ()
SetAllAchievs: ƒ(on)
SetAllUpgrades: ƒ(on)
SetDragonAura: ƒ(aura, slot)
SetResearch: ƒ(what, time)
SetTier: ƒ(building, tier)
ShowMenu: ƒ(what)
ShowPanel: ƒ(what)
SparkleAt: ƒ(x, y)
SparkleOn: ƒ(el)
SpawnWrinkler: ƒ(me)
SpecialGrandmaUnlock: 15
Spend: ƒ(howmuch)
SynergyUpgrade: ƒ(name, desc, building1, building2, tier)
T: 984
Ticker: "Actualités : « il faut bien dire que toutes ces histoires de cookies sont inquiétantes » déclare un idiot confus."
TickerAge: 7
TickerClicks: 0
TickerDraw: ƒ()
TickerEffect: 0
TickerN: 99
TieredAchievement: ƒ(name, desc, building, tier)
TieredUpgrade: ƒ(name, desc, building, tier)
Tiers: { 1: {… }, 2: {… }, 3: {… }, 4: {… }, 5: {… }, 6: {… }, 7: {… }, 8: {… }, 9: {… }, 10: {… }, 11: {… }, 12: {… }, 13: {… }, 14: {… }, synergy1: {… }, synergy2: {… }, fortune: {… } }
Timeout: ƒ()
Toggle: ƒ(prefName, button, on, off, invert)
ToggleExtraButtons: ƒ()
ToggleFancy: ƒ()
ToggleFilters: ƒ()
ToggleFullscreen: ƒ()
ToggleSpecialMenu: ƒ(on)
Unlock: ƒ(what)
arguments: null
caller: null
length: 1
name: ""
prototype:
constructor: ƒ(what)
[[Prototype]]: Object
[[FunctionLocation]]: main.js ? v = 4 : 8513
[[Prototype]]: ƒ()
apply: ƒ apply()
arguments: (…)
bind: ƒ bind()
call: ƒ call()
caller: (…)
constructor: ƒ Function()
length: 0
name: ""
toString: ƒ toString()
Symbol(Symbol.hasInstance): ƒ[Symbol.hasInstance]()
get arguments: ƒ()
set arguments: ƒ()
get caller: ƒ()
set caller: ƒ()
[[FunctionLocation]]:
[[Prototype]]: Object
[[Scopes]]: Scopes[0]
[[Scopes]]: Scopes[2]
0: Closure(Game.Init) { strCookieProductionMultiplierPlus: 'Multiplicateur de production de cookies <b>+[x] %</b>.', pool: '', power: 0, getStrCookieProductionMultiplierPlus: ƒ, getStrThousandFingersGain: ƒ, … }
1: Global { window: Window, self: Window, document: document, name: 'dominique chatelet', location: Location, … }
UnlockAt: (201)[{… }, {… }, {… }, {… }, {… }, {… }, {… }, {… }, {… }, {… }, {… }, {… }, {… }, {… }, {… }, {… }, {… }, {… }, {… }, {… }, {… }, {… }, {… }, {… }, {… }, {… }, {… }, {… }, {… }, {… }, {… }, {… }, {… }, {… }, {… }, {… }, {… }, {… }, {… }, {… }, {… }, {… }, {… }, {… }, {… }, {… }, {… }, {… }, {… }, {… }, {… }, {… }, {… }, {… }, {… }, {… }, {… }, {… }, {… }, {… }, {… }, {… }, {… }, {… }, {… }, {… }, {… }, {… }, {… }, {… }, {… }, {… }, {… }, {… }, {… }, {… }, {… }, {… }, {… }, {… }, {… }, {… }, {… }, {… }, {… }, {… }, {… }, {… }, {… }, {… }, {… }, {… }, {… }, {… }, {… }, {… }, {… }, {… }, {… }, {… }, …]
UnlockTiered: ƒ(me)
UpdateAscend: ƒ()
UpdateAscendIntro: ƒ()
UpdateAscensionModePrompt: ƒ()
UpdateGrandmapocalypse: ƒ()
UpdateMenu: ƒ()
UpdateNotes: ƒ()
UpdatePrompt: ƒ()
UpdateReincarnateIntro: ƒ()
UpdateSpecial: ƒ()
UpdateTicker: ƒ()
UpdateWrinklers: ƒ()
Upgrade: ƒ(name, desc, price, icon, buyFunction)
UpgradeDragon: ƒ()
UpgradePositions: { 141: Array(2), 181: Array(2), 253: Array(2), 254: Array(2), 255: Array(2), 264: Array(2), 265: Array(2), 266: Array(2), 267: Array(2), 268: Array(2), 269: Array(2), 270: Array(2), 271: Array(2), 272: Array(2), 273: Array(2), 274: Array(2), 275: Array(2), 276: Array(2), 277: Array(2), 278: Array(2), 279: Array(2), 280: Array(2), 281: Array(2), 282: Array(2), 283: Array(2), 284: Array(2), 285: Array(2), 286: Array(2), 287: Array(2), 288: Array(2), 289: Array(2), 290: Array(2), 291: Array(2), 292: Array(2), 293: Array(2), 323: Array(2), 325: Array(2), 326: Array(2), 327: Array(2), 328: Array(2), 329: Array(2), 353: Array(2), 354: Array(2), 355: Array(2), 356: Array(2), 357: Array(2), 358: Array(2), 359: Array(2), 360: Array(2), 362: Array(2), 363: Array(2), 364: Array(2), 365: Array(2), 368: Array(2), 393: Array(2), 394: Array(2), 395: Array(2), 396: Array(2), 397: Array(2), 408: Array(2), 409: Array(2), 410: Array(2), 411: Array(2), 412: Array(2), 413: Array(2), 449: Array(2), 450: Array(2), 451: Array(2), 495: Array(2), 496: Array(2), 505: Array(2), 520: Array(2), 537: Array(2), 539: Array(2), 540: Array(2), 541: Array(2), 542: Array(2), 561: Array(2), 562: Array(2), 591: Array(2), 592: Array(2), 643: Array(2), 646: Array(2), 647: Array(2), 717: Array(2), 718: Array(2), 719: Array(2), 720: Array(2), 801: Array(2), 802: Array(2), 803: Array(2), 804: Array(2), 805: Array(2) }
UpgradeSanta: ƒ()
Upgrades: {Reinforced index finger: G…e.Upgrade, Carpal tunnel prevention cream: G…e.Upgrade, Ambidextrous: G…e.Upgrade, Thousand fingers: G…e.Upgrade, Million fingers: G…e.Upgrade, … }
UpgradesById: { 0: G…e.Upgrade, 1: G…e.Upgrade, 2: G…e.Upgrade, 3: G…e.Upgrade, 4: G…e.Upgrade, 5: G…e.Upgrade, 6: G…e.Upgrade, 7: G…e.Upgrade, 8: G…e.Upgrade, 9: G…e.Upgrade, 10: G…e.Upgrade, 11: G…e.Upgrade, 12: G…e.Upgrade, 13: G…e.Upgrade, 14: G…e.Upgrade, 15: G…e.Upgrade, 16: G…e.Upgrade, 17: G…e.Upgrade, 18: G…e.Upgrade, 19: G…e.Upgrade, 20: G…e.Upgrade, 21: G…e.Upgrade, 22: G…e.Upgrade, 23: G…e.Upgrade, 24: G…e.Upgrade, 25: G…e.Upgrade, 26: G…e.Upgrade, 27: G…e.Upgrade, 28: G…e.Upgrade, 29: G…e.Upgrade, 30: G…e.Upgrade, 31: G…e.Upgrade, 32: G…e.Upgrade, 33: G…e.Upgrade, 34: G…e.Upgrade, 35: G…e.Upgrade, 36: G…e.Upgrade, 37: G…e.Upgrade, 38: G…e.Upgrade, 39: G…e.Upgrade, 40: G…e.Upgrade, 41: G…e.Upgrade, 42: G…e.Upgrade, 43: G…e.Upgrade, 44: G…e.Upgrade, 45: G…e.Upgrade, 46: G…e.Upgrade, 47: G…e.Upgrade, 48: G…e.Upgrade, 49: G…e.Upgrade, 50: G…e.Upgrade, 51: G…e.Upgrade, 52: G…e.Upgrade, 53: G…e.Upgrade, 54: G…e.Upgrade, 55: G…e.Upgrade, 56: G…e.Upgrade, 57: G…e.Upgrade, 58: G…e.Upgrade, 59: G…e.Upgrade, 60: G…e.Upgrade, 61: G…e.Upgrade, 62: G…e.Upgrade, 63: G…e.Upgrade, 64: G…e.Upgrade, 65: G…e.Upgrade, 66: G…e.Upgrade, 67: G…e.Upgrade, 68: G…e.Upgrade, 69: G…e.Upgrade, 70: G…e.Upgrade, 71: G…e.Upgrade, 72: G…e.Upgrade, 73: G…e.Upgrade, 74: G…e.Upgrade, 75: G…e.Upgrade, 76: G…e.Upgrade, 77: G…e.Upgrade, 78: G…e.Upgrade, 79: G…e.Upgrade, 80: G…e.Upgrade, 81: G…e.Upgrade, 82: G…e.Upgrade, 83: G…e.Upgrade, 84: G…e.Upgrade, 85: G…e.Upgrade, 86: G…e.Upgrade, 87: G…e.Upgrade, 88: G…e.Upgrade, 89: G…e.Upgrade, 90: G…e.Upgrade, 91: G…e.Upgrade, 92: G…e.Upgrade, 93: G…e.Upgrade, 94: G…e.Upgrade, 95: G…e.Upgrade, 96: G…e.Upgrade, 97: G…e.Upgrade, 98: G…e.Upgrade, 99: G…e.Upgrade, … }
UpgradesByPool: { kitten: Array(17), "": Array(422), cookie: Array(232), tech: Array(9), toggle: Array(17), … }
UpgradesInStore: (12)[G…e.Upgrade, G…e.Upgrade, G…e.Upgrade, G…e.Upgrade, G…e.Upgrade, G…e.Upgrade, G…e.Upgrade, G…e.Upgrade, G…e.Upgrade, G…e.Upgrade, G…e.Upgrade, G…e.Upgrade]
UpgradesN: 819
UpgradesOwned: 147
Win: ƒ(what)
WritePrefButton: ƒ(prefName, button, on, off, callback, invert)
WriteSave: ƒ(type)
WriteSlider: ƒ(slider, leftText, rightText, startValueFunction, callback)
accumulatedDelay: -975795
addClass: ƒ(what)
ascendContentl: div#ascendContent
ascendMeter: div#ascendMeter.meter.filling
ascendMeterLevel: 882
ascendMeterPercent: 0.26707531611918384
ascendMeterPercentT: 0.2691064808118989
ascendNumber: div#ascendNumber.roundedPanel
ascendUpgradesl: div#ascendUpgrades
ascendZoomablel: div#ascendZoomable
ascendl: div#ascend
ascensionMode: 0
ascensionModes: { 0: {… }, 1: {… } }
attachTooltip: ƒ(el, func, origin)
auraMult: ƒ(what)
autoclickerDetected: 0
bakeryName: "Dominique CHATELET"
bakeryNameL: div#bakeryName.title
bakeryNamePrompt: ƒ()
bakeryNamePromptRandom: ƒ()
bakeryNameRefresh: ƒ()
bakeryNameSet: ƒ(what)
baseResearchTime: 1800
baseSeason: ""
beta: 0
bg: "bgBlue"
bgFade: "bgBlue"
bgR: 0
bgRd: 0
bgType: 0
blendModesOn: true
bounds: DOMRect { x: 0, y: 0, width: 1920, height: 880, top: 0, … }
brokenMods: []
buffType: ƒ(name, func)
buffTypes: (26)[G…e.buffType, G…e.buffType, G…e.buffType, G…e.buffType, G…e.buffType, G…e.buffType, G…e.buffType, G…e.buffType, G…e.buffType, G…e.buffType, G…e.buffType, G…e.buffType, G…e.buffType, G…e.buffType, G…e.buffType, G…e.buffType, G…e.buffType, G…e.buffType, G…e.buffType, G…e.buffType, G…e.buffType, G…e.buffType, G…e.buffType, G…e.buffType, G…e.buffType, G…e.buffType]
buffTypesByName: [frenzy: G…e.buffType, blood frenzy: G…e.buffType, clot: G…e.buffType, dragon harvest: G…e.buffType, everything must go: G…e.buffType, …]
buffTypesN: 26
buffs: { }
buffsI: 0
buffsL: div#buffs.crateBox
accessKey: ""
align: ""
ariaAtomic: null
ariaAutoComplete: null
ariaBusy: null
ariaChecked: null
ariaColCount: null
ariaColIndex: null
ariaColSpan: null
ariaCurrent: null
ariaDescription: null
ariaDisabled: null
ariaExpanded: null
ariaHasPopup: null
ariaHidden: null
ariaInvalid: null
ariaKeyShortcuts: null
ariaLabel: null
ariaLevel: null
ariaLive: null
ariaModal: null
ariaMultiLine: null
ariaMultiSelectable: null
ariaOrientation: null
ariaPlaceholder: null
ariaPosInSet: null
ariaPressed: null
ariaReadOnly: null
ariaRelevant: null
ariaRequired: null
ariaRoleDescription: null
ariaRowCount: null
ariaRowIndex: null
ariaRowSpan: null
ariaSelected: null
ariaSetSize: null
ariaSort: null
ariaValueMax: null
ariaValueMin: null
ariaValueNow: null
ariaValueText: null
assignedSlot: null
attributeStyleMap: StylePropertyMap { size: 0 }
attributes: NamedNodeMap { 0: id, 1: class, id: id, class: class, length: 2 }
autocapitalize: ""
autofocus: false
baseURI: "http://localhost:3000/"
childElementCount: 0
childNodes: NodeList[]
children: HTMLCollection[]
classList: DOMTokenList['crateBox', value: 'crateBox']
className: "crateBox"
clientHeight: 0
clientLeft: 0
clientTop: 0
clientWidth: 0
contentEditable: "inherit"
dataset: DOMStringMap { }
dir: ""
draggable: false
elementTiming: ""
enterKeyHint: ""
firstChild: null
firstElementChild: null
hidden: false
id: "buffs"
inert: false
innerHTML: ""
innerText: ""
inputMode: ""
isConnected: true
isContentEditable: false
lang: ""
lastChild: null
lastElementChild: null
localName: "div"
namespaceURI: "http://www.w3.org/1999/xhtml"
nextElementSibling: div#cookieAnchor
nextSibling: text
nodeName: "DIV"
nodeType: 1
nodeValue: null
nonce: ""
offsetHeight: 0
offsetLeft: 576
offsetParent: div#sectionLeft.inset
offsetTop: 0
offsetWidth: 0
onabort: null
onanimationend: null
onanimationiteration: null
onanimationstart: null
onauxclick: null
onbeforecopy: null
onbeforecut: null
onbeforematch: null
onbeforepaste: null
onbeforexrselect: null
onblur: null
oncancel: null
oncanplay: null
oncanplaythrough: null
onchange: null
onclick: null
onclose: null
oncontextlost: null
oncontextmenu: null
oncontextrestored: null
oncopy: null
oncuechange: null
oncut: null
ondblclick: null
ondrag: null
ondragend: null
ondragenter: null
ondragleave: null
ondragover: null
ondragstart: null
ondrop: null
ondurationchange: null
onemptied: null
onended: null
onerror: null
onfocus: null
onformdata: null
onfullscreenchange: null
onfullscreenerror: null
ongotpointercapture: null
oninput: null
oninvalid: null
onkeydown: null
onkeypress: null
onkeyup: null
onload: null
onloadeddata: null
onloadedmetadata: null
onloadstart: null
onlostpointercapture: null
onmousedown: null
onmouseenter: null
onmouseleave: null
onmousemove: null
onmouseout: null
onmouseover: null
onmouseup: null
onmousewheel: null
onpaste: null
onpause: null
onplay: null
onplaying: null
onpointercancel: null
onpointerdown: null
onpointerenter: null
onpointerleave: null
onpointermove: null
onpointerout: null
onpointerover: null
onpointerrawupdate: null
onpointerup: null
onprogress: null
onratechange: null
onreset: null
onresize: null
onscroll: null
onsearch: null
onsecuritypolicyviolation: null
onseeked: null
onseeking: null
onselect: null
onselectionchange: null
onselectstart: null
onslotchange: null
onstalled: null
onsubmit: null
onsuspend: null
ontimeupdate: null
ontoggle: null
ontransitioncancel: null
ontransitionend: null
ontransitionrun: null
ontransitionstart: null
onvolumechange: null
onwaiting: null
onwebkitanimationend: null
onwebkitanimationiteration: null
onwebkitanimationstart: null
onwebkitfullscreenchange: null
onwebkitfullscreenerror: null
onwebkittransitionend: null
onwheel: null
outerHTML: "<div id=\"buffs\" class=\"crateBox\"></div>"
outerText: ""
ownerDocument: document
parentElement: div#sectionLeft.inset
parentNode: div#sectionLeft.inset
part: DOMTokenList[value: '']
prefix: null
previousElementSibling: div#specialPopup.framed.prompt.offScreen
previousSibling: text
role: null
    (…)
buildingCps: 32675371825455.617
buyBulk: 1
buyBulkOld: 1
buyBulkShortcut: 0
buyMode: 1
canLumps: ƒ()
canRefillLump: ƒ()
catchupLogic: 0
chimeType: 0
clickFrom: 0
clickLump: ƒ()
clickStr: "onclick"
clicksThisSession: 3
computeLumpTimes: ƒ()
computeLumpType: ƒ()
computeSeasonPrices: ƒ()
computeSeasons: ƒ()
computedMouseCps: 47475074056799.47
cookieClickSound: 6
cookieClicks: 1062
cookieOriginX: 288
cookieOriginY: 352
cookieUpgrades: (235)[G…e.Upgrade, G…e.Upgrade, G…e.Upgrade, G…e.Upgrade, G…e.Upgrade, G…e.Upgrade, G…e.Upgrade, G…e.Upgrade, G…e.Upgrade, G…e.Upgrade, G…e.Upgrade, G…e.Upgrade, G…e.Upgrade, G…e.Upgrade, G…e.Upgrade, G…e.Upgrade, G…e.Upgrade, G…e.Upgrade, G…e.Upgrade, G…e.Upgrade, G…e.Upgrade, G…e.Upgrade, G…e.Upgrade, G…e.Upgrade, G…e.Upgrade, G…e.Upgrade, G…e.Upgrade, G…e.Upgrade, G…e.Upgrade, G…e.Upgrade, G…e.Upgrade, G…e.Upgrade, G…e.Upgrade, G…e.Upgrade, G…e.Upgrade, G…e.Upgrade, G…e.Upgrade, G…e.Upgrade, G…e.Upgrade, G…e.Upgrade, G…e.Upgrade, G…e.Upgrade, G…e.Upgrade, G…e.Upgrade, G…e.Upgrade, G…e.Upgrade, G…e.Upgrade, G…e.Upgrade, G…e.Upgrade, G…e.Upgrade, G…e.Upgrade, G…e.Upgrade, G…e.Upgrade, G…e.Upgrade, G…e.Upgrade, G…e.Upgrade, G…e.Upgrade, G…e.Upgrade, G…e.Upgrade, G…e.Upgrade, G…e.Upgrade, G…e.Upgrade, G…e.Upgrade, G…e.Upgrade, G…e.Upgrade, G…e.Upgrade, G…e.Upgrade, G…e.Upgrade, G…e.Upgrade, G…e.Upgrade, G…e.Upgrade, G…e.Upgrade, G…e.Upgrade, G…e.Upgrade, G…e.Upgrade, G…e.Upgrade, G…e.Upgrade, G…e.Upgrade, G…e.Upgrade, G…e.Upgrade, G…e.Upgrade, G…e.Upgrade, G…e.Upgrade, G…e.Upgrade, G…e.Upgrade, G…e.Upgrade, G…e.Upgrade, G…e.Upgrade, G…e.Upgrade, G…e.Upgrade, G…e.Upgrade, G…e.Upgrade, G…e.Upgrade, G…e.Upgrade, G…e.Upgrade, G…e.Upgrade, G…e.Upgrade, G…e.Upgrade, G…e.Upgrade, G…e.Upgrade, …]
cookies: 38066292909806120000
cookiesEarned: 734525588251725000000
cookiesMultByType: { kittens: 5.711999999999999, eggs: 1 }
cookiesPs: 678214484811306.6
cookiesPsByType: { Cursor: 16953840225.599998, Grandma: 1853882368, Farm: 670556.16, Mine: 2532736, Factory: 4710395.733333333, … }
cookiesPsRaw: 678214484811306.6
cookiesPsRawHighest: 678214484811306.6
cookiesReset: 8212263040095991
cookiesSucked: 0
cookiesd: 38064710409341570000
costDetails: ƒ(cost)
cpsSucked: 0
crate: ƒ(me, context, forceClickStr, id, style)
crateTooltip: ƒ(me, context)
cssClasses: (4)['focusLeft', 'extraButtons', 'lumpsOn', 'noAds']
currentFps: 1
customGrandmaNames: []
darkenL: div#darken
debugColors: (11)['#322', '#411', '#600', '#900', '#f30', '#f90', '#ff0', '#9f0', '#0f9', '#09f', '#90f']
debugTimersOn: 0
debuggedUpgradeCpClick: []
debuggedUpgradeCpS: []
defaultBg: "bgBlue"
delayTimeouts: 0
deleteAllModData: ƒ()
deleteModData: ƒ(id)
doLumps: ƒ()
dragonAura: 0
dragonAura2: 0
dragonAuras: { 0: {… }, 1: {… }, 2: {… }, 3: {… }, 4: {… }, 5: {… }, 6: {… }, 7: {… }, 8: {… }, 9: {… }, 10: {… }, 11: {… }, 12: {… }, 13: {… }, 14: {… }, 15: {… }, 16: {… }, 17: {… }, 18: {… }, 19: {… }, 20: {… } }
dragonAurasBN: {No aura: {… }, Breath of Milk: {… }, Dragon Cursor: {… }, Elder Battalion: {… }, Reaper of Fields: {… }, … }
dragonLevel: 0
dragonLevels: (27)[{… }, {… }, {… }, {… }, {… }, {… }, {… }, {… }, {… }, {… }, {… }, {… }, {… }, {… }, {… }, {… }, {… }, {… }, {… }, {… }, {… }, {… }, {… }, {… }, {… }, {… }, {… }]
drawT: 985
dropRateMult: ƒ()
easterEggs: (20)['Chicken egg', 'Duck egg', 'Turkey egg', 'Quail egg', 'Robin egg', 'Ostrich egg', 'Cassowary egg', 'Salmon roe', 'Frogspawn', 'Shark egg', 'Turtle egg', 'Ant larva', 'Golden goose egg', 'Faberge egg', 'Wrinklerspawn', 'Cookie egg', 'Omelette', 'Chocolate egg', 'Century egg', '"egg"']
eff: ƒ(name, def)
effs: { }
eggDrops: (12)['Chicken egg', 'Duck egg', 'Turkey egg', 'Quail egg', 'Robin egg', 'Ostrich egg', 'Cassowary egg', 'Salmon roe', 'Frogspawn', 'Shark egg', 'Turtle egg', 'Ant larva']
elderWrath: 0
elderWrathD: 0.6263711403845569
elderWrathOld: 0
externalDataLoaded: false
foolObjects: { Unknown: {… }, Cursor: {… }, Grandma: {… }, Farm: {… }, Mine: {… }, … }
fortuneCPS: 0
fortuneGC: 0
fps: 1
fpsStartTime: 0
frameNumber: 0
fullDate: 1656507850008
gainBuff: ƒ(type, time, arg1, arg2, arg3)
gainLumps: ƒ(total)
gainedPrestige: 0
getDynamicTooltip: ƒ(func, origin, isCrate)
getFps: ƒ()
getLumpRefillMax: ƒ()
getLumpRefillRemaining: ƒ()
getNewTicker: ƒ(manual)//note : "manual" is true if the ticker was clicked, but may also be true on startup etc { var list = []; var NEWS = loc("News :").replace(' ', '&nbsp;') + ' '; if (Game.TickerN % 2 == 0 || Game.cookiesEarned >= 10100000000)
getPledgeDuration: ƒ()
getSeasonDuration: ƒ()
getTooltip: ƒ(text, origin, isCrate)
getVeilBoost: ƒ()
getVeilDefense: ƒ()
getWrinklersMax: ƒ()
globalCpsMult: 20.75613671465389
goldenClicks: 73
goldenClicksLocal: 0
goldenCookieBuildingBuffs: { Cursor: Array(2), Grandma: Array(2), Farm: Array(2), Mine: Array(2), Factory: Array(2), … }
goldenCookieChoices: (28)['Frenzy', 'frenzy', 'Lucky', 'multiply cookies', 'Ruin', 'ruin cookies', 'Elder frenzy', 'blood frenzy', 'Clot', 'clot', 'Click frenzy', 'click frenzy', 'Cursed finger', 'cursed finger', 'Cookie chain', 'chain cookie', 'Cookie storm', 'cookie storm', 'Building special', 'building special', 'Dragon Harvest', 'dragon harvest', 'Dragonflight', 'dragonflight', 'Sweet', 'free sugar lump', 'Blab', 'blab']
goldenCookieUpgrades: (10)['Get lucky', 'Lucky day', 'Serendipity', 'Heavenly luck', 'Lasting fortune', 'Decisive fate', 'Lucky digit', 'Lucky number', 'Lucky payout', 'Golden goose egg']
grandmaNames: (44)['Granny', 'Gusher', 'Ethel', 'Edna', 'Doris', 'Maud', 'Hilda', 'Gladys', 'Michelle', 'Michele', 'Phyllis', 'Millicent', 'Muriel', 'Myrtle', 'Mildred', 'Mavis', 'Helen', 'Gloria', 'Sheila', 'Betty', 'Gertrude', 'Agatha', 'Beryl', 'Agnes', 'Pearl', 'Precious', 'Ruby', 'Vera', 'Bonnie', 'Ada', 'Bunny', 'Cookie', 'Darling', 'Gaga', 'GamGam', 'Memaw', 'Mimsy', 'Peanut', 'Nana', 'Nan', 'Tootsie', 'Warty', 'Stinky', 'Heinous']
halloweenDrops: (7)['Skull cookies', 'Ghost cookies', 'Bat cookies', 'Slime cookies', 'Pumpkin cookies', 'Eyeball cookies', 'Spider cookies']
handleScroll: ƒ(e)
handmadeCookies: 8494530123923113
harvestLumps: ƒ(amount, silent)
hasAura: ƒ(what)
hasBuff: ƒ()
heartDrops: (7)['Pure heart biscuits', 'Ardent heart biscuits', 'Sour heart biscuits', 'Weeping heart biscuits', 'Golden heart biscuits', 'Eternal heart biscuits', 'Prism heart biscuits']
heavenlyBounds: { left: 0, right: 0, top: 0, bottom: 0 }
heavenlyChips: 6
heavenlyChipsDisplayed: 0
heavenlyChipsSpent: 14
heavenlyCookies: 0
heavenlyPower: 1
heralds: 0
https: false
isMinigameReady: ƒ(me)
isSaving: false
jukebox: { sounds: Array(75), tracks: Array(0), onSound: 0, onTrack: 0, trackLooped: true, … }
keys: []
killBuff: ƒ(what)//remove a buff by name { if (Game.buffs[what])
killBuffs: ƒ()
killShimmers: ƒ()//stop and delete all shimmers (used on resetting etc)
l: div#game.focusLeft.extraButtons.lumpsOn.noAds
last: Game.Achievement { id: 588, name: 'All the stars in heaven', dname: 'Toutes les étoiles du firmament', desc: 'Possède <b>100</b> améliorations célestes. ', baseDesc: 'Possède <b>100</b> améliorations célestes. ', … }
lastActivity: 1656829724715
lastClick: 1656829721819
lastClickedEl: div#product0.product.unlocked.enabled
lastClickedSpecialPic: 0
lastDate: 1656829726544
lastSaveData: "2.048||1656738720777;1656507850008;1656829726544;Dominique CHATELET;wcesz|011101011011010101110110001|38050693976655450000;734509989318575700000;1062;73;8494530123923113;64013;0;5;8212263040095991;0;0;0;0;-1;2;0;0;0;0;0;0;0;;0;0;20;6;14;0;0;-1;-1;-1;-1;-1;0;0;0;0;65;0;0;7;7;1656824784810;0;0;;0;0;0;678214484811306.6;50;|282,282,723721754603934800,0,,0,282;221,221,85986186373137330,0,,1,221;204,204,32951680734455,0,,1,204;200,200,105065229272983,0,,1,200;163,163,242821423946695,0,,1,163;147,147,599511167837736,0,,1,147;127,127,2753875213159863,0,,1,127;108,108,13044560583388174,0,,1,108;101,101,61165362044224590,0,,1,101;54,54,97144241031386190,0,,1,54;45,45,239893122089679140,0,,1,45;26,26,1076960509637068700,0,,1,26;16,16,2186875593322116000,0,,1,16;16,16,12277307788059589000,0,,1,16;35,35,110601488367885160000,0,,1,35;37,37,537205503914473500000,0,,1,37;3,3,69921003803513220000,0,,1,3;0,0,0,0,,0,0;0,0,0,0,,0,0;||||"
launchMods: ƒ()
listTinyOwnedUpgrades: ƒ(arr)
loadLumps: ƒ(time)
loadModData: ƒ()
loadedFromVersion: 2.048
loopT: 984
loseShimmeringVeil: ƒ(context)
lumpCurrentType: 0
lumpMatureAge: 72000000
lumpOverripeAge: 86400000
lumpRefill: 0
lumpRipeAge: 82800000
lumpT: 1656824784810
lumpTooltip: ƒ()
lumps: 7
lumpsTotal: 7
magicCpS: ƒ(what)
makeSeed: ƒ()
milkH: 0.35
milkHd: 0.3499999991861833
milkProgress: 4
milkType: 5
missedGoldenClicks: 64013
mobile: 0
modHooks: { logic: Array(0), draw: Array(0), reset: Array(0), reincarnate: Array(0), ticker: Array(0), … }
modHooksNames: (10)['logic', 'draw', 'reset', 'reincarnate', 'ticker', 'cps', 'cookiesPerClick', 'click', 'create', 'check']
modSaveData: { }
modifyBuildingPrice: ƒ(building, price)
mods: { }
mouseCps: ƒ()
mouseDown: 0
mouseMoved: 0
mousePointer: 0
mouseX: 1915
mouseX2: 1840
mouseY: 389
mouseY2: 379
mutedBuildingTooltip: ƒ(id)
nextAscensionMode: 0
nextResearch: 0
noteId: 18
noteL: div#notes
onCrate: 0
onMenu: ""
onPanel: "Left"
particleAdd: ƒ(x, y, xd, yd, size, dur, z, pic, text)
particles: (50)[{… }, {… }, {… }, {… }, {… }, {… }, {… }, {… }, {… }, {… }, {… }, {… }, {… }, {… }, {… }, {… }, {… }, {… }, {… }, {… }, {… }, {… }, {… }, {… }, {… }, {… }, {… }, {… }, {… }, {… }, {… }, {… }, {… }, {… }, {… }, {… }, {… }, {… }, {… }, {… }, {… }, {… }, {… }, {… }, {… }, {… }, {… }, {… }, {… }, {… }]
particlesDraw: ƒ(z)
particlesN: 50
particlesUpdate: ƒ()
permanentUpgrades: (5)[-1, -1, -1, -1, -1]
playCookieClickSound: ƒ()
playGoldenCookieChime: ƒ()
playWrinklerSquishSound: ƒ()
pledgeT: 0
pledges: 0
popups: 1
prefs: [particles: 0, numbers: 1, autosave: 1, autoupdate: 1, milk: 0, …]
prestige: 20
previousFps: 1
priceIncrease: 1.15
promptAnchorL: div#promptAnchor
promptConfirm: ""
promptL: div#promptContent
promptOn: 0
promptOptionFocus: 0
promptOptionsN: 0
promptUpdateFunc: 0
promptWrapL: div#prompt.framed
rareEggDrops: (8)['Golden goose egg', 'Faberge egg', 'Wrinklerspawn', 'Cookie egg', 'Omelette', 'Chocolate egg', 'Century egg', '"egg"']
ready: 1
recalculateGains: 0
refillLump: ƒ(n, func)
registerHook: ƒ(hook, func)
registerMod: ƒ(id, mod)
reindeerClicked: 0
reindeerDrops: (7)['Christmas tree biscuits', 'Snowflake biscuits', 'Snowman biscuits', 'Holly biscuits', 'Candy cane biscuits', 'Bell biscuits', 'Present biscuits']
removeClass: ƒ(what)
removeHook: ƒ(hook, func)
researchT: -1
resets: 2
resize: ƒ()
runModHook: ƒ(hook, param)
runModHookOnValue: ƒ(hook, val)
safeLoadString: ƒ(str)
safeSaveString: ƒ(str)
salvageSave: ƒ()
santaDrops: (14)['Increased merriness', 'Improved jolliness', 'A lump of coal', 'An itchy sweater', 'Reindeer baking grounds', 'Weighted sleighs', 'Ho ho ho-flavored frosting', 'Season savings', 'Toy workshop', 'Naughty list', "Santa's bottomless bag", "Santa's helpers", "Santa's legacy", "Santa's milk and cookies"]
santaLevel: 0
santaLevels: (15)['Éprouvette festive', 'Décoration festive', 'Couronne festive', 'Arbre festif', 'Cadeau festif', "Fœtus d'elfe festif", 'Bambin elfe', 'Petit elfe', 'Jeune elfe', 'Elfe costaud', 'Nico', 'Père Noël', 'Père Noël ancien', 'Vrai Père Noël', 'Père Noël ultime']
saveModData: ƒ()
saySeasonSwitchUses: ƒ()
sayTime: ƒ(time, detail)
scale: 1
scriptBindings: []
scriptLoaded: ƒ(who, script)
season: ""
seasonDrops: (55)['Pure heart biscuits', 'Ardent heart biscuits', 'Sour heart biscuits', 'Weeping heart biscuits', 'Golden heart biscuits', 'Eternal heart biscuits', 'Prism heart biscuits', 'Skull cookies', 'Ghost cookies', 'Bat cookies', 'Slime cookies', 'Pumpkin cookies', 'Eyeball cookies', 'Spider cookies', 'Chicken egg', 'Duck egg', 'Turkey egg', 'Quail egg', 'Robin egg', 'Ostrich egg', 'Cassowary egg', 'Salmon roe', 'Frogspawn', 'Shark egg', 'Turtle egg', 'Ant larva', 'Golden goose egg', 'Faberge egg', 'Wrinklerspawn', 'Cookie egg', 'Omelette', 'Chocolate egg', 'Century egg', '"egg"', 'Increased merriness', 'Improved jolliness', 'A lump of coal', 'An itchy sweater', 'Reindeer baking grounds', 'Weighted sleighs', 'Ho ho ho-flavored frosting', 'Season savings', 'Toy workshop', 'Naughty list', "Santa's bottomless bag", "Santa's helpers", "Santa's legacy", "Santa's milk and cookies", 'Christmas tree biscuits', 'Snowflake biscuits', 'Snowman biscuits', 'Holly biscuits', 'Candy cane biscuits', 'Bell biscuits', 'Present biscuits']
seasonT: 0
seasonTriggerBasePrice: 1000000000
seasonUses: 0
seasons: { christmas: {… }, valentines: {… }, fools: {… }, easter: {… }, halloween: {… } }
seed: "wcesz"
sesame: 0
setOnCrate: ƒ(what)
setVolume: ƒ(what)
setVolumeMusic: ƒ(what)
setWubMusic: ƒ(what)
shimmer: ƒ(type, obj, noCount)
shimmerTypes: { golden: {… }, reindeer: {… } }
shimmers: []
shimmersL: div#shimmers
shimmersN: 8651
showBackupWarning: ƒ()
showLangSelection: ƒ()
showedScriptLoadError: false
sortSprites: ƒ(a, b)
sortSpritesById: ƒ(a, b)
sortedMods: []
sparkles: div#sparkles.sparkles
sparklesFrames: 16
sparklesT: 0
specialTab: ""
specialTabHovered: ""
specialTabs: []
spendLump: ƒ(n, str, func, free)
startDate: 1656738720777
storeBulkButton: ƒ(id)
storeBuyAll: ƒ()
storeToRefresh: 0
textParticles: (20)[{… }, {… }, {… }, {… }, {… }, {… }, {… }, {… }, {… }, {… }, {… }, {… }, {… }, {… }, {… }, {… }, {… }, {… }, {… }, {… }]
textParticlesAdd: ƒ(text, el, posX, posY)
textParticlesUpdate: ƒ()
textParticlesY: 0
thresholdIcons: (46)[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 21, 22, 23, 24, 25, 26, 27, 28, 29, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 30, 31]
tickerBelowL: div#commentsText2.commentsText.risingAway
tickerL: div#commentsText1.commentsText.risingUp
tickerTooNarrow: 900
time: 1656829726757
timedout: false
tinyCookie: ƒ()
toQuit: false
toReload: false
toSave: false
tooltip: { x: 0, y: 0, origin: 'store', on: 0, text: ƒ, … }
touchEvents: 0
unbuffedCps: 678214484811306.6
updateBuffs: ƒ()//executed every logic frame { for (var i in Game.buffs)
updateClasses: ƒ()
updateLog: "<div class=\"selectable\"><div class=\"section\">
updateShimmers: ƒ()//run shimmer functions, kill overtimed shimmers and spawn new ones { for (var i in Game.shimmers)
upgradesToRebuild: 0
useLocalStorage: 1
vanilla: 0
vault: []
version: 2.048
visible: true
volume: 65
volumeMusic: 50
windowH: 880
windowW: 1920
wrapper: div#wrapper.offWeb
wrinklerHP: 2.1
wrinklerSquishSound: 2
wrinklers: (12)[{… }, {… }, {… }, {… }, {… }, {… }, {… }, {… }, {… }, {… }, {… }, {… }]
wrinklersPopped: 0
[[Prototype]]: Object